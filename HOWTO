==========
Installing
==========

INSTALLATION

Dependencies are:
* python (version 2.6 or higher) - e.g. http://www.python.org/download/releases/2.7.1/
* pyOSC - http://gitorious.org/pyosc (checkout included in the packaged version)
* pyserial (version 2.5 or higher) - http://pyserial.sourceforge.net/ - download: http://sourceforge.net/projects/pyserial/files/pyserial/2.5/pyserial-2.5.tar.gz/download, to use the XBee Xplorer coordinator board, you will also need an FTDI driver for your platform.
* python-xbee-api (version 2.0.0 or higher) - (included in the packaged version)
* optparse_gui (version 0.2) - (included in the packaged version); this is dependent itself on wxPython: http://www.wxpython.org/download.php
* python libmapper, see: http://www.idmil.org/software/libmapper/downloads ; will be gracefully skipped if not needed

python :
check which version you have:
  $ python --version
If it is lower than 2.6 you will need to get a version higher than 2.6.

(make sure Python is in your path (esp. for Windows!))

Install the dependencies:

optparse_gui :
extract archive and:
  $ cd optparse_gui-0.2
  $ sudo python setup.py install
  
NOTE: optparse_gui is depended on wxPython, so you will need that too, from http://www.wxpython.org/download.php.

For Mac OSX 64bit there is unfortunately no package available at the moment, but you can change your system to use 32bit python instead for one session:
  $ export VERSIONER_PYTHON_PREFER_32_BIT=yes (see Apple's man 1 python)
or set is as system default:
  $ defaults write com.apple.versioner.python Prefer-32-Bit -bool yes
  

pyOSC :
extract archive and:
  $ cd pyosc
  $ sudo ./setup.py install

XBee-2.0.0 :
extract archive and:
  $ cd XBee-2.0.0
  $ sudo ./setup.py install

pydon:
 $ cd pydon
 $ sudo python setup.py install

pyserial will be installed automatically if it is not yet installed.


==========

go to the pydon directory
  $ cd pydon

start:
  $ python metapydonhive.py
  will pop up a gui where you can set the options
  the default options are saved to a file named "pydondefaults.ini", so that next time you open the program, you'll have the same defaults

From metapydonhive you can choose which kind of client to use:
  - datanetwork: integrate with the SenseWorld DataNetwork
  - libmapper: integrate with the libmapper world (from IDMIL)
  - osc: send osc messages to a certain destination (MiniHiveOSC)
  - junXion: send osc messages that STEIM's JunXion can deal with


start:
  $ python metapydonhive.py -h
  
this will print the help:

Usage: metapydonhive.py [options]

MetaPydonHive - Create a client to communicate with the minibee network.

Options:
  -h, --help            show this help message and exit
  -P PROGRAM, --program=PROGRAM
                        Which program/infrastructure do you want to use?
                        options: datanetwork, osc, libmapper, junxion
  -s SERIAL, --serial=SERIAL
                        the serial port [default:/dev/ttyUSB0]
  -a, --apimode         use API mode for communication with the minibees
                        [default:False]
  -v, --verbose         verbose printing [default:False]
  -c CONFIG, --config=CONFIG
                        the name of the configuration file for the minibees
                        [default:pydon/configs/hiveconfig.xml]
  -n NAME, --name=NAME  the name of the client in the datanetwork
                        [default:pydonhive] (needed for datanetwork or
                        libmapper)
  -b BAUDRATE, --baudrate=BAUDRATE
                        the serial port [default:57600]
  -m MINIBEES, --nr_of_minibees=MINIBEES
                        the number of minibees in the network [default:20]
  -o MBOFFSET, --minibee_offset=MBOFFSET
                        the offset of the number range for the minibees in the
                        network [default:1]
  -d HOST, --host_ip=HOST
                        the ip address of the datanetwork host
                        [default:127.0.0.1]
  -t HPORT, --host_port=HPORT
                        the port on which the application that has to receive
                        the OSC messages will listen [default:57120] (needed
                        for osc or junxion)
  -i IP, --ip=IP        the ip on which the client will listen
                        [default:0.0.0.0]
  -p PORT, --port=PORT  the port on which the client will listen
                        [default:57600]
